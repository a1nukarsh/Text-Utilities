{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","console","log","target","rows","UpperText","toUpperCase","LowerText","toLowerCase","copyText","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","role","msg","defaultProps","aboutText","App","setmode","setalert","showAlert","message","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6a73baaf.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <div>\n      <nav\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n      >\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\">\n            {props.title}\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\n                  Home\n                </a>\n              </li>\n              {/* <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/about\">\n                  {props.aboutText}\n                </a>\n              </li> */}\n            </ul>\n            {/* <form className=\"d-flex\">\n              <input\n                className=\"form-control me-2\"\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n              />\n              <button className=\"btn btn-outline-success\" type=\"submit\">\n                Search\n              </button>\n            </form> */}\n            <div className=\"form-check form-switch\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                id=\"flexSwitchCheckDefault\"\n                onClick={props.toggleMode}\n              />\n              <label\n                className={`form-check-label text-${\n                  props.mode === \"light\" ? \"dark\" : \"light\"\n                }`}\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                Dark Mode\n              </label>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nNavbar.propTypes = { title: PropTypes.string, aboutText: PropTypes.string };\n\nNavbar.defaultProps = {\n  title: \"Set Title here\",\n  aboutText: \"Set About Text\",\n};\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const handleUpClick = () => {\n    console.log(\"Upper Case has been clicked\");\n    let UpperText = text.toUpperCase();\n    setText(UpperText);\n  };\n  const handleLoClick = () => {\n    console.log(\"Lower Case has been clicked\");\n    let LowerText = text.toLowerCase();\n    setText(LowerText);\n  };\n  const handleCopy = () => {\n    console.log(\"Text Copied\");\n    let copyText = document.getElementById('myBox');\n    copyText.select()\n    navigator.clipboard.writeText(copyText.value)\n  };\n  const clear = () => {\n    console.log(\"Clear has been clicked\");\n    // let clear = text.toUpperCase();\n    setText(\" \");\n  };\n  const handleOnChange = (event) => {\n    console.log(\"onChange\");\n    setText(event.target.value);\n  };\n  const [text, setText] = useState(\"\");\n  // text = \"new text\" --> wrong way to change text\n  //   setText(\"new text\") // Right way to change text\n  return (\n      <>\n    <div className=\"container my-3\">\n      <label htmlFor=\"myBox\" className=\"form-label\">\n        {props.heading}\n      </label>\n      <textarea\n        className=\"form-control\"\n        value={text}\n        onChange={handleOnChange}\n        id=\"myBox\"\n        rows=\"9\"\n      ></textarea>\n      <div>\n      <button className=\"btn btn-primary my-1 mx-1\" onClick={handleUpClick}>\n        Convert to UPPER CASE\n      </button>\n      <button className=\"btn btn-primary my-1 mx-1\" onClick={handleLoClick}>\n        Convert to lower case\n      </button>\n      </div>\n      <div >\n      <button className=\"btn btn-primary my-1 mx-1\" onClick={handleCopy}>\n        Copy Text\n      </button>\n      <button className=\"btn btn-primary my-1 mx-1\" onClick={clear}>\n        Clear\n      </button>\n      </div>\n      \n    </div>\n    <div className=\"container my-3\">\n        <h2>Your text summary</h2>\n        <p>{text.split(\" \").length} Words, {text.length} Characters</p>\n        <p>{0.01 * text.split(\" \").length} Minute Read</p>\n        <h3 className=\"my-2\">Preview</h3>\n        <p>{text.length>0?text:\"You can preview your text here\"}</p>\n    </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Alert(props) {\n  return (\n    \n     props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n        <strong>{props.alert.type}</strong>: {props.alert.msg},\n        <button\n          type=\"button\"\n          className=\"btn-close\"\n          data-bs-dismiss=\"alert\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n    \n  );\n}\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar.js\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\"); //Whether dark mode is enabled or not\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar\n        title=\"Hellow\"\n        aboutText=\"hello about\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      {/* <Switch>\n        <Route exact path=\"/about\">\n          <About />\n        </Route> */}\n        {/* <Route exact path=\"/\"> */}\n          <TextForm heading=\"Enter the text for analysis\" mode={mode} />\n        {/* </Route>\n      </Switch>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}